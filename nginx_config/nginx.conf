
#user  nobody;
worker_processes  1;

#error_log  logs/error.log;
#error_log  logs/error.log  notice;
#error_log  logs/error.log  info;

#pid        logs/nginx.pid;


events {
    worker_connections  1024;
}


http {
    include       mime.types;
    default_type  application/octet-stream;

    #log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
    #                  '$status $body_bytes_sent "$http_referer" '
    #                  '"$http_user_agent" "$http_x_forwarded_for"';

    #access_log  logs/access.log  main;

    sendfile        on;
    #tcp_nopush     on;

    #keepalive_timeout  0;
    keepalive_timeout  65;

    #gzip  on;

    server {
        listen       443;
        ssl on;
        server_name  localhost;

        #charset koi8-r;

        #access_log  logs/host.access.log  main;

        ssl_certificate /Users/romanfilippov/Development/Thesis/certificates/server.crt;
        ssl_certificate_key /Users/romanfilippov/Development/Thesis/certificates/server.key;
        ssl_client_certificate /Users/romanfilippov/Development/Thesis/certificates/ca.crt;
        ssl_verify_client optional;

        #ssl_session_cache    shared:SSL:1m;
        #ssl_session_timeout  5m;

        #ssl_ciphers  HIGH:!aNULL:!MD5;
        ssl_prefer_server_ciphers  on;
        ssl_protocols              TLSv1 TLSv1.1 TLSv1.2;

        # Authentication and Authorization module
        location /security/ {
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header Host $http_host;
            proxy_set_header Cookie $http_cookie;
            proxy_set_header X-Forwarded-Proto $scheme;
            #proxy_set_header X-SSL-CERT $ssl_client_cert;
            proxy_set_header X-SSL-CLIENT $ssl_client_s_dn;
            proxy_set_header X-SSL-VERIFY $ssl_client_verify;

            proxy_redirect off;
            proxy_pass_header  Set-Cookie;
            proxy_cookie_domain $host localhost:8009;

            proxy_pass http://localhost:8088;

        }

        #location / { return 200 'gangnam style!'; }

        # O-MI Node

        location / {
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header Host $http_host;
            proxy_set_header Cookie $http_cookie;
            proxy_set_header X-Forwarded-Proto $scheme;
            #proxy_set_header X-SSL-CERT $ssl_client_cert;
            proxy_set_header X-SSL-CLIENT $ssl_client_s_dn;
            proxy_set_header X-SSL-VERIFY $ssl_client_verify;

            proxy_redirect off;
            proxy_pass_header  Set-Cookie;
            proxy_cookie_domain $host localhost:8009;

            proxy_pass http://localhost:8080;

        }

        # redirect server error pages to the static page /50x.html
        error_page   500 502 503 504  /50x.html;
        location = /50x.html {
            root   html;
        }

    }


    # another virtual host using mix of IP-, name-, and port-based configuration
    #
    #server {
    #    listen       8000;
    #    listen       somename:8080;
    #    server_name  somename  alias  another.alias;

    #    location / {
    #        root   html;
    #        index  index.html index.htm;
    #    }
    #}


    # HTTPS server
    #
    #server {
    #    listen       443 ssl;
    #    server_name  localhost;

    #    ssl_certificate      cert.pem;
    #    ssl_certificate_key  cert.key;

    #    ssl_session_cache    shared:SSL:1m;
    #    ssl_session_timeout  5m;

    #    ssl_ciphers  HIGH:!aNULL:!MD5;
    #    ssl_prefer_server_ciphers  on;

    #    location / {
    #        root   html;
    #        index  index.html index.htm;
    #    }
    #}
    include servers/*;
}
